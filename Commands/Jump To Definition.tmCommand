<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>beforeRunningCommand</key>
	<string>nop</string>
	<key>command</key>
	<string>cake eval "
  (do
    (in-ns 'cake)
    (clojure.core/refer 'clojure.core)
    (require '[clojure.string :as string])
    (if (not (= \"$TM_FILEPATH\" \"\"))
      (let [user-dir (str (System/getProperty \"user.dir\") \"/src/\")
            path-to-file (string/replace \"$TM_FILEPATH\" user-dir \"\")]
        (-&gt; path-to-file
            (string/replace \".clj\" \"\")
            (string/replace \"_\" \"-\")
            (string/replace \"/\" \".\")
            symbol
            in-ns))
       (in-ns 'user))
    (let [{:keys [file line]} (clojure.core/meta #'$TM_SELECTED_TEXT)]
      (clojure.core/println file line)
      (clojure.core/let [resource (.getResource (clojure.lang.RT/baseLoader) file)]
    	   (if (clojure.core/= (.getProtocol resource) \"jar\")
          (clojure.core/println \"a jar\")
          (clojure.core/println \"a file\")))))"</string>
	<key>fallbackInput</key>
	<string>word</string>
	<key>input</key>
	<string>selection</string>
	<key>keyEquivalent</key>
	<string>@J</string>
	<key>name</key>
	<string>Jump To Definition</string>
	<key>output</key>
	<string>showAsHTML</string>
	<key>scope</key>
	<string>source.clojure</string>
	<key>uuid</key>
	<string>FCF29461-95F8-44B3-AD5C-C8AD74A1A3B5</string>
</dict>
</plist>
