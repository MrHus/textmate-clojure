<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>beforeRunningCommand</key>
	<string>nop</string>
	<key>command</key>
	<string>cake eval "
  (do
    (in-ns 'cake)
    (clojure.core/refer 'clojure.core)
    (require '[clojure.string :as string])
    (let [user-dir (str (System/getProperty \"user.dir\") \"/src/\")
          path-to-file (string/replace \"$TM_FILEPATH\" user-dir \"\")]
      (-&gt; path-to-file
          (string/replace \".clj\" \"\")
          (string/replace \"_\" \"-\")
          (string/replace \"/\" \".\")
          symbol
          in-ns))
    (require '[clojure.pprint :as pprint])
    (require '[clojure.contrib.macro-utils :as macro-utils])
    (println
      (str 
       \"&lt;pre&gt;\" 
       (pprint/with-pprint-dispatch pprint/code-dispatch
         (binding [pprint/*print-suppress-namespaces* true]
          (pprint/write (macro-utils/mexpand-all '${TM_SELECTED_TEXT:-$TM_CURRENT_LINE}) :pretty true :stream nil)))
       \"&lt;/pre&gt;\")))"</string>
	<key>fallbackInput</key>
	<string>word</string>
	<key>input</key>
	<string>selection</string>
	<key>keyEquivalent</key>
	<string>~@M</string>
	<key>name</key>
	<string>Macroexpand All</string>
	<key>output</key>
	<string>showAsHTML</string>
	<key>scope</key>
	<string>source.clojure</string>
	<key>uuid</key>
	<string>1811A2F3-E45B-4DBB-93B9-6904DC2B5A81</string>
</dict>
</plist>
